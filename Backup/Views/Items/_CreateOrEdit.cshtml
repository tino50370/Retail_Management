@model RetailKing.Models.Items

@* This partial view defines form fields that will appear when creating and editing entities *@
<script  type="text/javascript">
      $(document).ready(function () {
          $("#company").change(function () {

              var JsonActivity = {
                  "Id": $("#SyllabusId1").val()
              };
              $.ajax({
                  type: "Post",
                  url: '@Url.Action("GetCategories", "Items")',
                  dataType: 'html',
                  data: { json_str: JSON.stringify(JsonActivity) },
                  success: function (resp) {
                      var ddl = $("#company");
                      ddl.empty();
                      var subjects = $.parseJSON(resp);
                      //alert(subjects);
                      $.each(subjects, function (index, value) {
                         // alert(value.Name);
                          ddl.append(
                          $('<option/>', {
                              value: value.Id,
                              text: value.Name
                          })
                        );
                      });
                  },
                  error: function (data) {
                  }
              });
          });

          $("#category").change(function () {

              var JsonActivity = {
                  "Id": $("#category").val()
              };
              $.ajax({
                  type: "Post",
                  url: '@Url.Action("GetSubCategories", "Items")',
                  dataType: 'html',
                  data: { json_str: JSON.stringify(JsonActivity) },
                  success: function (resp) {
                      var ddl = $("#category");
                      ddl.empty();
                      var subjects = $.parseJSON(resp);
                      //alert(subjects);
                      $.each(subjects, function (index, value) {
                          // alert(value.Name);
                          ddl.append(
                          $('<option/>', {
                              value: value.Id,
                              text: value.Name
                          })
                        );
                      });
                  },
                  error: function (data) {
                  }
              });
          });

      });
</script>

<div class="editor-label">
    @Html.LabelFor(model => model.Item)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Item)
    @Html.ValidationMessageFor(model => model.Item)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.ItemCode)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ItemCode)
    @Html.ValidationMessageFor(model => model.ItemCode)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.BuyingPrice)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.BuyingPrice)
    @Html.ValidationMessageFor(model => model.BuyingPrice)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.SellingPrice)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.SellingPrice)
    @Html.ValidationMessageFor(model => model.SellingPrice)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.company)
</div>
<div class="editor-field">
     @Html.DropDownListFor(model => model.company,
                         new SelectList(
                             Model.companies,
                             "name",
                                      "name"), new { id = "company" })
    @Html.ValidationMessageFor(model => model.company)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.category)
</div>
<div class="editor-field">
  @Html.DropDownListFor(model => model.category,
                         new SelectList(
                             Model.categories,
                             "name",
                                      "name"), new { id = "category" })
    @Html.ValidationMessageFor(model => model.category)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.SubCategory)
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.SubCategory,
                           new SelectList(
                             Model.categories,
                             "name",
                                      "name"), new { id = "subcategory" })
    @Html.ValidationMessageFor(model => model.SubCategory)
</div>


<div class="editor-label">
    @Html.LabelFor(model => model.Reorder)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Reorder)
    @Html.ValidationMessageFor(model => model.Reorder)
</div>



<div class="editor-label">
    @Html.LabelFor(model => model.tax)
</div>
<div class="editor-field">
   @Html.DropDownListFor(model => model.tax, new SelectList(new[] { "Taxed", "Not Taxed" }), new { id = "tax" }) 
    @Html.ValidationMessageFor(model => model.tax)
</div>

