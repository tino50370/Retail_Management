@model RetailKing.Models.Account

@* This partial view defines form fields that will appear when creating and editing entities *@

<script type="text/javascript">
    $(function (event) {
        $("#Level").change(function (event) {
            //  event.preventDefault();
            // alert($("#Level").val());
            if ($("#Level").val() == "SECOND") {
                $("#Level1").show();
                $("#Level2d").show();
                $("#Level3d").hide();
                $("#second").hide();
                $("#second_div").hide();
                $("#minu2").hide();
                $("#Level2").val('');
                $("#Level3").val('');
            }
            else if ($("#Level").val() == "THIRD") {
                $("#Level1").show();
                $("#second").show();
                $("#second_div").show();
                $("#Level2d").hide();
                $("#Level3d").show();
                $("#minu2").show();
                $("#Level2").val('');
                $("#Level3").val('');
            }
        });

        $("#Level1").change(function (event) {

            if ($("#Level").val() == "THIRD") {
                $.ajax({
                    type: "Get",
                    url: '/Accounts/secondLevel',
                    dataType: 'html',
                    data: { json_str: $("#Level1").val() },
                    success: function (resp) {
                        var data = $.parseJSON(resp);
                        var ddl = $('#second');
                        ddl.empty();
                        //  alert(data)
                        $.each(data, function (index, value) {
                            // alert(value.Name);
                            ddl.append(
                                $('<option/>', {
                                    value: value.Value,
                                    text: value.Text
                                })
                            );
                        });

                    },
                    error: function (data) {
                    }
                });
            }
            else if ($("#Level").val() == "SECOND") {
                $.ajax({
                    type: "Get",
                    url: '/Accounts/AccountNumber',
                    dataType: 'html',
                    data: {
                        json_str: $("#Level1").val(),
                        level: $("#Level").val()
                    },
                    success: function (resp) {
                        var data = $.parseJSON(resp);
                        var ddl = $('#Level2');

                        ddl.val(data);

                    },
                    error: function (data) {
                    }
                });
            }
        });

        $("#second").change(function () {
            $("#Level2").val($("#second").val());
            $.ajax({
                type: "Get",
                url: '/Accounts/AccountNumber',
                dataType: 'html',
                data: {
                    json_str: $("#Level2").val(),
                    level: $("#Level").val()
                },
                success: function (resp) {
                    var data = $.parseJSON(resp);
                    var ddl = $('#Level3');

                    ddl.val(data);
                    $("#AccountCode").val($("#second").val() + "-" + data)
                },
                error: function (data) {
                }
            });
        })

        $("#Level2").keyup(function (e) {
            // alert("oyiroyryi");
            var txt = $("#Level2").val();
            if (txt.length > 2) {
                var n = $("#Level2").val()
                $("#Level2").val(n.substring(0, n.length - 1));
                $("#Level2").focus();
            }
        });

        $("#Level3").keyup(function (e) {
            // alert("oyiroyryi");
            var txt = $("#Level3").val();
            if (txt.length > 3) {
                var n = $("#Level3").val()
                $("#Level3").val(n.substring(0, n.length - 1));
                $("#Level3").focus();
            }
        });

        $("#CurrencyId").change(function (e) {
            var txt = $("#CurrencyId option:selected").text();
            // alert(txt);
            $("#Currency").val('');
            $("#Currency").val(txt);
            // alert($("#Currency").val());
        });
        $("#DicountType").change(function () {
            var vv = $("#DicountType").val();
            if (vv == "PERCENT") {
                $("#discountLabel").html('Dicount %');
            }
            else {
                $("#discountLabel").html('Dicount Amount');
            }
        });
        $("#Promotion").change(function () {
            var vv = $("#Promotion").val();
            if (vv == "YES") {
                $("#PromotionData").show();
            }
            else {
                $("#PromotionData").hide();
            }
        });
    })
</script>
<div class="col-md-8">
    <div class="editor-label">
        @Html.Label("Account Level")
    </div>
    <div class="editor-field">
        @Html.DropDownList("Level", new SelectList(new[] { "SECOND", "THIRD" }), new { id = "Level", @class = "form-control" })
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.AccountCode)
    </div>
    <div class="editor-field col-md-12">
        <div class="col-md-3"> @Html.DropDownListFor(m => m.Level1, new SelectList((IEnumerable<SelectListItem>)ViewBag.Accountz, "Value", " Text"), new { style = "width:98%", @class = "form-control" })</div>
        <div class="col-md-1">-</div>
        <div class="col-md-3" id="second_div" style="display:none"> @Html.DropDownList("second", new SelectList((IEnumerable<SelectListItem>)ViewBag.Type, "Value", " Text"), new { style = "width:98%; display: none", id = "second", @class = "form-control" })</div>
        <div id="Level2d" class="col-md-1">
            <input type="text" id="Level2" style="width:60px" disabled="disabled" class="form-control" />
        </div>
        <div class="col-md-1" id="minu2" style="display: none">-</div>
        <div id="Level3d" style="display:none" class="col-md-2"><input type="text" id="Level3" style="width:80px;" disabled="disabled" class="form-control" /></div>
        @Html.HiddenFor(model => model.AccountCode)
        @Html.ValidationMessageFor(model => model.AccountCode)
    </div>

    <div class="editor-field">
        @Html.HiddenFor(model => model.LinkAccount)
        @Html.ValidationMessageFor(model => model.LinkAccount)
    </div>
    <div class="editor-label">
        @Html.Label("Company")
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(m => m.CompanyId, new SelectList((IEnumerable<SelectListItem>)ViewBag.Company, "Value", " Text", Model.CurrencyId), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CompanyId)
    </div>
    <div class="editor-label">
        @Html.Label("Currency")
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.Currency, new { style = "Display:none" })
        @Html.DropDownListFor(m => m.CurrencyId, new SelectList((IEnumerable<SelectListItem>)ViewBag.Currency, "Value", " Text", ViewData["Comp"].ToString()), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CurrencyId)
    </div>
    <div class="editor-label">
        @Html.Label("Account Name")
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.AccountName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.AccountName)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Balance)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.Balance, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Balance)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Opening)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.Opening, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Opening)
    </div>

    <div class="editor-label">
        @Html.Label("Mapping Code")
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.MappingCode, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.MappingCode)
    </div>
    <div class="col-md-10">
        <div class="editor-label">
            @Html.Label("On Promotion")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.GiveDiscount, new SelectList(new[] { "NO", "YES" }, Model.GiveDiscount), new { id = "Promotion", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GiveDiscount)
        </div>
    </div>
    <div id="PromotionData" style="display:none;border: 1px solid #DDDDDD;background-color:#DDDDDD ">
        <div class="col-md-5">
            <div class="editor-label">
                @Html.Label("Discount Type")
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.DiscountType, new SelectList(new[] { "-- Select Discount--", "PERCENT", "AMOUNT" }, Model.DiscountType), new { id = "DicountType", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DiscountType)
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-label">
                @Html.Label("Discount", new { id = "discountLabel" })
            </div>

            <div class="editor-field">
                @Html.TextBoxFor(model => model.Discount, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Discount)
            </div>
            </div>
                <p></p>
            </div>
            <div class="editor-field">
                <div class="btn btn-orange">Select Account Icon: <input type="file" name="Image" id="PImage" /></div>
            </div>
        </div>
