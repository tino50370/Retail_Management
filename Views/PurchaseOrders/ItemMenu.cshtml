@model RetailKing.Models.menu

@{
    ViewBag.Title = "ItemMenu";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div class="row">
    <div class="col-md-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Item Menu </h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div class="row">

                    @using (Html.BeginForm("ItemMenu", "Items", FormMethod.Post, new { id = "createMenus" }))
                    {
                        //@Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)

                        <fieldset>

                            <div class="editor-label">
                                @Html.Label("Amount")
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.button, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.button)
                            </div>

                            <div class="editor-label">
                                @Html.Label("Item Name")
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.caption, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.caption)
                            </div>

                            <div class="editor-label">
                                @Html.Label("Item Code")
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.code, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.code)
                            </div>

                            <div class="editor-label">
                                @Html.LabelFor(model => model.color)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.color, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.color)
                            </div>

                            <div class="editor-label">
                                @Html.LabelFor(model => model.company)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.company, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.company)
                            </div>

                            <div class="editor-label">
                                @Html.LabelFor(model => model.tax)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.tax, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.tax)
                            </div>

                            <p>
                                <button class="btn btn-success" onclick="SaveView('createMenus')">Save</button>
                                <button class="btn btn-warning" onclick="GetView('@Url.Action("Index", "Items")')">Cancel</button>
                            </p>
                        </fieldset>
                    }

                </div>
            </div>
        </div>
    </div>
</div>


