@model RetailKing.Models.Item

@* This partial view defines form fields that will appear when creating and editing entities *@
   <script  type="text/javascript">
       $(document).ready(function () {
     
          $("#company").change(function () {
              $.ajax({
                  type: "Post",
                  url: '@Url.Action("GetCategories", "Items")',
                  dataType: 'html',
                  data: {
                      Id: $("#company").val(),
                      Company: Company
                  },
                  success: function (resp) {
                      var ddl = $("#category");
                      ddl.empty();
                      var subjects = $.parseJSON(resp);
                      //alert(subjects);
                      $.each(subjects, function (index, value) {
                         // alert(value.Name);
                          ddl.append(
                          $('<option/>', {
                              value: value.Id,
                              text: value.Name
                          })
                        );
                      });
                  },
                  error: function (data) {
                  }
              });
          });

          $("#category").change(function () {
              var xx = $("#category").val();
              $.ajax({
                  type: "Post",
                  url: '@Url.Action("GetSubCategories", "Items")',
                  dataType: 'html',
                  data: {
                      Id: xx,
                      Company: $("#company").val()
                  },
                  success: function (resp) {
                      var ddl = $("#SubCategory");
                      ddl.empty();
                      var subjects = $.parseJSON(resp);
                      //alert(subjects);
                      $.each(subjects, function (index, value) {
                          // alert(value.Name);
                          ddl.append(
                          $('<option/>', {
                              value: value.Id,
                              text: value.Name
                          })
                        );
                      });
                  },
                  error: function (data) {
                  }
              });
          });

          $("#DicountType").change(function () {
              var vv = $("#DicountType").val();
              if (vv == "PERCENT") {
                  $("#discountLabel").html('Dicount %');
              }
              else {
                  $("#discountLabel").html('Dicount Amount');
              }
          });

          $("#Promotion").change(function () {
              var vv = $("#Promotion").val();
              if (vv == "YES") {
                  $("#PromotionData").show();
              }
              else {
                  $("#PromotionData").hide();
              }
          });

          $("#AdPosition").change(function () {
              var ap = $("#AdPosition").val();
              if (ap == "Banner") {
                  $("#PromoImg").show();
                  $("#PromoDimentions").html("Image should be width 870px X height 397px");
              }
              else if (ap == "Side") {
                  $("#PromoImg").show();
                  $("#PromoDimentions").html("Image should be width 270px X height 400px");
              }
              else {
                  $("#PromoImg").hide();
              }
          });

      });
</script>

 <div class="col-md-5">

<div class="editor-label">
    @Html.Label("Item Name")
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.ItemName)
</div>
</div> 
 <div class="col-md-5">
<div class="editor-label">
    @Html.Label("Item Code")
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.ItemCode, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.ItemCode)
</div>
</div> 
<div style="display:none">
    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Buying Price")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.BuyingPrice, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BuyingPrice)
        </div>
    </div>
    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Selling Price")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.SellingPrice, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SellingPrice)
        </div>
    </div>
    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Manufacturer")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Manufacturer, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Manufacturer)
        </div>
    </div>
    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Manufacturing Country")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(m => m.Nation, new SelectList((IEnumerable<SelectListItem>)ViewBag.Country, "Value", " Text", Model.Nation), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Nation)
        </div>

    </div>
    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Company")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.company,
                         new SelectList(
                             Model.companies,
                             "name",
                                      "name",ViewData["Compan"].ToString()), new { id = "company" ,@class = "form-control" })
            @Html.ValidationMessageFor(model => model.company)
        </div>
    </div>

    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Category")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.category,
                         new SelectList(
                             Model.categories,
                             "AccountCode",
                                      "AccountName",Model.category), new { id = "category" , @class = "form-control" })
            @Html.ValidationMessageFor(model => model.category)
        </div>
    </div>
    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Reorder Level")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Reorder, new { style="width: 100px" , @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Reorder)
        </div>
    </div>
    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Subcategory")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SubCategory,
                           new SelectList(
                             Model.SubCategories,
                             "AccountName",
                                      "AccountName",Model.SubCategory), new { id = "SubCategory",@class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubCategory)
        </div>
    </div>
    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Tax")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.tax, new SelectList(new[] { "Taxed", "Not Taxed" }, Model.tax), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.tax)
        </div>
    </div>
    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Featured Item")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Featured, new SelectList(new[] { "NO", "YES" }, Model.Featured), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Featured)
        </div>
    </div>
</div>
<div class="col-md-10">
<div class="editor-label">
    @Html.Label("On Promotion")
</div>
<div class="editor-field">
     @Html.DropDownListFor(model => model.Promotion , new SelectList(new[] {"NO", "YES" },Model.Promotion), new { id = "Promotion", @class = "form-control" }) 
    @Html.ValidationMessageFor(model => model.DicountType)
</div>
</div> 

<div id="PromotionData" style="display:none;border: 1px solid #DDDDDD;background-color:#DDDDDD ">

    <div class="col-md-5">
        @Html.HiddenFor(model => model.Image)
        @Html.HiddenFor(model => model.ThumbImage)
        <div class="editor-label">
            @Html.Label("Title")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Title)
        </div>
    </div>

    <div class="col-md-5">
        <div class="editor-label">
            @Html.Label("Description")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
    </div> 
<div class="col-md-5" >
    @Html.HiddenFor(model => model.Image)
    @Html.HiddenFor(model => model.ThumbImage)
    <div class="editor-label">
        @Html.Label("Start Date")
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.SDate, new { style="width:200px", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SDate)
    </div>
</div> 

<div class="col-md-5">
    <div class="editor-label">
    @Html.Label("End Date")
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.EDate,new { style="width:200px", @class = "form-control" } )
    @Html.ValidationMessageFor(model => model.EDate)
</div>
</div> 

<div class="col-md-5">
<div class="editor-label">
    @Html.Label("Discount Type")
</div>
<div class="editor-field">
     @Html.DropDownListFor(model => model.DicountType , new SelectList(new[] {"-- Select Discount--","PERCENT", "AMOUNT" },Model.DicountType), new { id = "DicountType", @class = "form-control" }) 
    @Html.ValidationMessageFor(model => model.DicountType)
</div>
</div> 

<div class="col-md-5 last">
<div class="editor-label">
    @Html.Label("Discount", new { id="discountLabel"})
</div>

<div class="editor-field">
    @Html.TextBoxFor(model => model.Discount, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Discount)
</div>
</div> 

<div class="col-md-10">
<div class="editor-label">
    @Html.Label("Promotion Position")
</div>
<div  class="editor-field">
    
     @Html.DropDownListFor(model => model.AdPosition,
                           new SelectList(
                             ViewBag.Adposition,
                             "Value",
                                      "Text",Model.SubCategory), new { id = "AdPosition", @class = "form-control" })
    @Html.ValidationMessageFor(model => model.DicountType)
</div>
</div> 

<div id="PromoImg" class="col-md-10" style="margin-top:10px; display:none">
   <div id="PromoDimentions"></div>
        <div class="editor-field">
            <div class="btn btn-orange">Select Promotion Image: <input type="file" name="Images" id="PImage" /></div>
        </div>
    </div>

</div>
<br />
@*
    <p></p>
    <div class="col-md-10" style="margin-top:10px">
        @if (Model.Image != null)
        {
        <div class="editor-field">
            <img src="@Url.Content(@Model.Image)" alt="@ViewData["Company"]">
        </div><br />
        }
            <div class="editor-field">
                <div class="btn btn-navy">Select Product Image: <input type="file" name="Images" id="Image" /></div>
            </div>
        </div>

*@

<script type="text/javascript">
    $(function (event) {
        $('#SDate').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_4",
            dateFormat: "d MM yy"
        });

        $('#EDate').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_4",
            dateFormat: "d MM yy"
        });

    })
</script>